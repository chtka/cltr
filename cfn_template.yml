Parameters:
  KeyPairName:
    Description: Provide an existing EC2 KeyPair to enable SSH access into the server.
    Type: AWS::EC2::KeyPair::KeyName
  ConfigFileS3Path:
    Description: Provide the S3 path to the configuration file to be used for the clinical trials analysis driver program.
    Type: String
Resources:
  EC2Instance:
      Type: AWS::EC2::Instance
      CreationPolicy:
        ResourceSignal:
          Count: '1'
          Timeout: PT15M
      Properties:
        InstanceType: t2.micro
        ImageId: ami-e0ba5c83
        SecurityGroupIds:
          - !Ref CLTRSecurityGroup
        Tags:
          - Key: Name
            Value: !Ref AWS::StackName
        KeyName: !Ref KeyPairName
        IamInstanceProfile:
          !Ref CLTRS3FullAccessInstanceProfile
        UserData:
          'Fn::Base64':
            !Sub
              - |
                #!/bin/bash -xe
                sudo -i
                /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}
                systemctl start docker
                aws s3 cp ${CONFIG_FILE_S3_PATH} config.json
                docker run -v `pwd`/config.json:/clinical-trials-analysis/config.json chtka/clinical-trials-analysis:latest > /search_trials.log
                /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}
              - CONFIG_FILE_S3_PATH: !Ref ConfigFileS3Path
      Metadata:
        AWS::CloudFormation::Init:
          config:
            packages:
              yum:
                docker: []
            services:
              docker:
                enabled: "true"
                ensureRunning: "true"
                packages:
                  yum:
                    - "docker"
  CLTRSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open Port 22 for SSH, 80 for HTTP.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
  CLTRS3FullAccessRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement: 
          - Effect: Allow
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AmazonS3FullAccess"
  CLTRS3FullAccessInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: "/"
      Roles:
        - !Ref CLTRS3FullAccessRole




        